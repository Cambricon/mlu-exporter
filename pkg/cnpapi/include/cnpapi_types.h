#ifndef CNPAPI_TYPES_H_
#define CNPAPI_TYPES_H_
#include <stdint.h>
#ifdef __cplusplus
extern "C" {
#endif

#define CNPAPI_EXPORT __attribute__((visibility("default")))
#ifdef NDEBUG
#define CNPAPI_DEBUG_EXPORT
#else
#define CNPAPI_DEBUG_EXPORT __attribute__((visibility("default")))
#endif
#define CNPAPI_DISABLE_EXPORT __attribute__((visibility("hidden")))

typedef enum {
  CNPAPI_SUCCESS = 0,
  CNPAPI_ERROR_NOT_INITIALIZED = 1,
  CNPAPI_ERROR_INVALID_DEVICE_ID = 2,
  CNPAPI_ERROR_INVALID_ARGUMENT = 3,
  CNPAPI_ERROR_EVENT_GROUP_ENABLED = 4,
  CNPAPI_ERROR_INSUFFICIENT_MEMORY = 5,
  CNPAPI_ERROR_NO_DRIVER = 6,
  CNPAPI_ERROR_RESERVED0 = 7,
  CNPAPI_ERROR_UNKNOWN = 8,
  CNPAPI_ERROR_MAX_LIMIT_REACHED = 9,
  CNPAPI_ERROR_DRIVER_COMMUNICATION_FAILED = 10,
  CNPAPI_ERROR_DEVICE_BUSY = 11,
  CNPAPI_ERROR_ALREADY_IN_USE = 12,
  CNPAPI_ERROR_ACTIVITY_CALLBACK_NOT_REGISTERED = 13,
  CNPAPI_ERROR_ACTIVITY_CALLBACK_ALREADY_REGISTERED = 14,
  CNPAPI_ERROR_PMU_COUNTER_NOT_ENABLED = 15,
  CNPAPI_ERROR_INVALID_PMU_COUNTER_ID = 16,
  CNPAPI_ERROR_INVALID_PMU_COUNTER_NAME = 17,
  CNPAPI_ERROR_INVALID_DEVICE_TYPE = 18,
  CNPAPI_ERROR_UNSUPPORTED_DRIVER_VERSION = 19,
  CNPAPI_ERROR_INVALID_CHIP_TYPE = 20,
  CNPAPI_ERROR_MULTIPLE_SUBSCRIBERS_NOT_SUPPORTED = 21,
  CNPAPI_ERROR_MULTIPLE_CHIPS_TYPE_NOT_SUPPORTED = 22,
  // deprecated
  CNPAPI_ERROR_INVALID_DEVICE = CNPAPI_ERROR_INVALID_DEVICE_ID
} cnpapiResult;

typedef enum {
  CNPAPI_DEVICE_TYPE_UNKNOWN = -1,
  CNPAPI_DEVICE_TYPE_MLU220 = 0,
  CNPAPI_DEVICE_TYPE_MLU270,
  CNPAPI_DEVICE_TYPE_MLU290,
  CNPAPI_DEVICE_TYPE_MLU370,
  CNPAPI_DEVICE_TYPE_CE3226,
  CNPAPI_DEVICE_TYPE_MLU365,
  CNPAPI_DEVICE_TYPE_SIZE,
  // deprecated
  CNPAPI_MLU220 = CNPAPI_DEVICE_TYPE_MLU220,
  CNPAPI_MLU270 = CNPAPI_DEVICE_TYPE_MLU270,
  CNPAPI_MLU290 = CNPAPI_DEVICE_TYPE_MLU290,
  CNPAPI_DEVIEC_TYPE_CE3226 = CNPAPI_DEVICE_TYPE_CE3226,
} cnpapiDeviceType;

typedef enum {
  CNPAPI_CHIP_TYPE_UNKNOWN = -1,
  CNPAPI_CHIP_TYPE_C20E = 0,
  CNPAPI_CHIP_TYPE_C20L,
  CNPAPI_CHIP_TYPE_C20,
  CNPAPI_CHIP_TYPE_C30S,
  CNPAPI_CHIP_TYPE_C30D,
  CNPAPI_CHIP_TYPE_CE3226V100,
  CNPAPI_CHIP_TYPE_CE3226V101,
  CNPAPI_CHIP_TYPE_SIZE
} cnpapiChipType;

#ifdef __cplusplus
}
#endif

#endif  // CNPAPI_TYPES_H_
